#version 400

layout(location = 0) in vec3 vertex_position;
layout(location = 1) in vec3 vertex_normal;
layout(location = 2) in vec2 vertex_texture;



uniform mat4 view;
uniform mat4 proj;
uniform mat4 model;

uniform bool DrawSkyBox;

uniform vec3 camera_position;

out vec3 reflect_dir;

void main()
{
	if(DrawSkyBox)
		reflect_dir = vertex_position;
	else
	{
		vec3 worldCamera = camera_position;



		vec3 worldPos = vec3(model * vec4(vertex_position, 1.0f));

		vec3 worldNorm = vec3(model * vec4(vertex_normal, 0.0f));

		vec3 worldView = normalize(worldCamera - worldPos);

		reflect_dir = reflect(-worldView, worldNorm);
	}


	// Convert position to clip coordinates and pass along
	gl_Position = proj * view * model * vec4(vertex_position, 1.0);

}


  